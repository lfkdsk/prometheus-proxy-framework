# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      - setup_remote_docker:
          docker_layer_caching: true

      - restore_cache:
          keys:
              - maven-{{ checksum "pom.xml" }}
              - maven- # used if checksum fails

      - run: mvn dependency:go-offline

      - save_cache:
          key: maven-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2

      - run: mvn integration-test

      - run: ssh-keyscan ${PROMETHEUS_HOST} >> ~/.ssh/known_hosts

      - deploy:
          name: "Push Dev image to Docker Hub"
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
              echo "Pushing Docker Image [:dev]"
              docker push dashbase/prometheus-proxy:dev
            fi

      - deploy:
          name: "Send Token files"
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo "Sending Token"
              echo SECRET_TOKEN=${SECRET_TOKEN} > run.env
              scp run.env ec2-user@${PROMETHEUS_HOST}:/home/ec2-user
            fi

      - deploy:
          name: "Deploy dev deployment"
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo "Deploying dev deployment"
              scp docker-compose.yml ec2-user@${PROMETHEUS_HOST}:/home/ec2-user
              ssh ec2-user@${PROMETHEUS_HOST} docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
              ssh ec2-user@${PROMETHEUS_HOST} docker-compose -f docker-compose.yml pull
              ssh ec2-user@${PROMETHEUS_HOST} docker-compose -f docker-compose.yml down
              ssh ec2-user@${PROMETHEUS_HOST} docker-compose -f docker-compose.yml up -d
            fi

workflows:
  version: 2
  build-n-deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /^v.*/
